services:
  api:
    image: jayaprakashjigin/developer-analytics-dashboard:backend
    ports:
      - "8000:8000"      
    volumes:
      - ./backend:/backend
    depends_on:
      db:
        condition: service_healthy
      es:
        condition: service_healthy

  frontend:
    image: jayaprakashjigin/developer-analytics-dashboard:frontend
    volumes:
      - react_build:/frontend/build

  nginx:
    image: jayaprakashjigin/developer-analytics-dashboard:nginx
    ports:
      - 80:8080
    volumes:
      - react_build:/var/www/frontend
    depends_on:
      - api
      - frontend

  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:$ELASTIC_VERSION
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD
      - xpack.security.enabled=$ELASTIC_SECURITY
      - bootstrap.memory_lock= true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    container_name: es
    healthcheck:
      test: curl -s http://es:9200 >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 50
    ports:
      - 9200:9200
    volumes:
    - esdata:/var/lib/elasticsearch/data
  
  db:
    image: postgres:latest
    container_name: postgres_db1
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_SERVER: postgres_db1
      POSTGRES_PORT: 5432
    ports:
    - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U postgres -d postgres'"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 20s

volumes:
  postgres_data:
  react_build:
  esdata:
